/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MasterIndexRouteImport } from './routes/master/index'
import { Route as AssetsIndexRouteImport } from './routes/assets/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as AssetsAssetIdRouteImport } from './routes/assets/$assetId'
import { Route as MasterModelsIndexRouteImport } from './routes/master/models/index'
import { Route as MasterLocationsIndexRouteImport } from './routes/master/locations/index'
import { Route as MasterCategoriesIndexRouteImport } from './routes/master/categories/index'
import { Route as MasterBrandsIndexRouteImport } from './routes/master/brands/index'
import { Route as AdminUsersIndexRouteImport } from './routes/admin/users/index'
import { Route as AdminSettingsIndexRouteImport } from './routes/admin/settings/index'
import { Route as MasterModelsModelIdRouteImport } from './routes/master/models/$modelId'
import { Route as MasterLocationsLocationIdRouteImport } from './routes/master/locations/$locationId'
import { Route as MasterCategoriesCategoryIdRouteImport } from './routes/master/categories/$categoryId'
import { Route as MasterBrandsBrandIdRouteImport } from './routes/master/brands/$brandId'
import { Route as AdminUsersUserIdRouteImport } from './routes/admin/users/$userId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MasterIndexRoute = MasterIndexRouteImport.update({
  id: '/master/',
  path: '/master/',
  getParentRoute: () => rootRouteImport,
} as any)
const AssetsIndexRoute = AssetsIndexRouteImport.update({
  id: '/assets/',
  path: '/assets/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const AssetsAssetIdRoute = AssetsAssetIdRouteImport.update({
  id: '/assets/$assetId',
  path: '/assets/$assetId',
  getParentRoute: () => rootRouteImport,
} as any)
const MasterModelsIndexRoute = MasterModelsIndexRouteImport.update({
  id: '/master/models/',
  path: '/master/models/',
  getParentRoute: () => rootRouteImport,
} as any)
const MasterLocationsIndexRoute = MasterLocationsIndexRouteImport.update({
  id: '/master/locations/',
  path: '/master/locations/',
  getParentRoute: () => rootRouteImport,
} as any)
const MasterCategoriesIndexRoute = MasterCategoriesIndexRouteImport.update({
  id: '/master/categories/',
  path: '/master/categories/',
  getParentRoute: () => rootRouteImport,
} as any)
const MasterBrandsIndexRoute = MasterBrandsIndexRouteImport.update({
  id: '/master/brands/',
  path: '/master/brands/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminUsersIndexRoute = AdminUsersIndexRouteImport.update({
  id: '/admin/users/',
  path: '/admin/users/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSettingsIndexRoute = AdminSettingsIndexRouteImport.update({
  id: '/admin/settings/',
  path: '/admin/settings/',
  getParentRoute: () => rootRouteImport,
} as any)
const MasterModelsModelIdRoute = MasterModelsModelIdRouteImport.update({
  id: '/master/models/$modelId',
  path: '/master/models/$modelId',
  getParentRoute: () => rootRouteImport,
} as any)
const MasterLocationsLocationIdRoute =
  MasterLocationsLocationIdRouteImport.update({
    id: '/master/locations/$locationId',
    path: '/master/locations/$locationId',
    getParentRoute: () => rootRouteImport,
  } as any)
const MasterCategoriesCategoryIdRoute =
  MasterCategoriesCategoryIdRouteImport.update({
    id: '/master/categories/$categoryId',
    path: '/master/categories/$categoryId',
    getParentRoute: () => rootRouteImport,
  } as any)
const MasterBrandsBrandIdRoute = MasterBrandsBrandIdRouteImport.update({
  id: '/master/brands/$brandId',
  path: '/master/brands/$brandId',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminUsersUserIdRoute = AdminUsersUserIdRouteImport.update({
  id: '/admin/users/$userId',
  path: '/admin/users/$userId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/assets/$assetId': typeof AssetsAssetIdRoute
  '/admin': typeof AdminIndexRoute
  '/assets': typeof AssetsIndexRoute
  '/master': typeof MasterIndexRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/master/brands/$brandId': typeof MasterBrandsBrandIdRoute
  '/master/categories/$categoryId': typeof MasterCategoriesCategoryIdRoute
  '/master/locations/$locationId': typeof MasterLocationsLocationIdRoute
  '/master/models/$modelId': typeof MasterModelsModelIdRoute
  '/admin/settings': typeof AdminSettingsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/master/brands': typeof MasterBrandsIndexRoute
  '/master/categories': typeof MasterCategoriesIndexRoute
  '/master/locations': typeof MasterLocationsIndexRoute
  '/master/models': typeof MasterModelsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/assets/$assetId': typeof AssetsAssetIdRoute
  '/admin': typeof AdminIndexRoute
  '/assets': typeof AssetsIndexRoute
  '/master': typeof MasterIndexRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/master/brands/$brandId': typeof MasterBrandsBrandIdRoute
  '/master/categories/$categoryId': typeof MasterCategoriesCategoryIdRoute
  '/master/locations/$locationId': typeof MasterLocationsLocationIdRoute
  '/master/models/$modelId': typeof MasterModelsModelIdRoute
  '/admin/settings': typeof AdminSettingsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/master/brands': typeof MasterBrandsIndexRoute
  '/master/categories': typeof MasterCategoriesIndexRoute
  '/master/locations': typeof MasterLocationsIndexRoute
  '/master/models': typeof MasterModelsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/assets/$assetId': typeof AssetsAssetIdRoute
  '/admin/': typeof AdminIndexRoute
  '/assets/': typeof AssetsIndexRoute
  '/master/': typeof MasterIndexRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/master/brands/$brandId': typeof MasterBrandsBrandIdRoute
  '/master/categories/$categoryId': typeof MasterCategoriesCategoryIdRoute
  '/master/locations/$locationId': typeof MasterLocationsLocationIdRoute
  '/master/models/$modelId': typeof MasterModelsModelIdRoute
  '/admin/settings/': typeof AdminSettingsIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
  '/master/brands/': typeof MasterBrandsIndexRoute
  '/master/categories/': typeof MasterCategoriesIndexRoute
  '/master/locations/': typeof MasterLocationsIndexRoute
  '/master/models/': typeof MasterModelsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/assets/$assetId'
    | '/admin'
    | '/assets'
    | '/master'
    | '/admin/users/$userId'
    | '/master/brands/$brandId'
    | '/master/categories/$categoryId'
    | '/master/locations/$locationId'
    | '/master/models/$modelId'
    | '/admin/settings'
    | '/admin/users'
    | '/master/brands'
    | '/master/categories'
    | '/master/locations'
    | '/master/models'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/assets/$assetId'
    | '/admin'
    | '/assets'
    | '/master'
    | '/admin/users/$userId'
    | '/master/brands/$brandId'
    | '/master/categories/$categoryId'
    | '/master/locations/$locationId'
    | '/master/models/$modelId'
    | '/admin/settings'
    | '/admin/users'
    | '/master/brands'
    | '/master/categories'
    | '/master/locations'
    | '/master/models'
  id:
    | '__root__'
    | '/'
    | '/assets/$assetId'
    | '/admin/'
    | '/assets/'
    | '/master/'
    | '/admin/users/$userId'
    | '/master/brands/$brandId'
    | '/master/categories/$categoryId'
    | '/master/locations/$locationId'
    | '/master/models/$modelId'
    | '/admin/settings/'
    | '/admin/users/'
    | '/master/brands/'
    | '/master/categories/'
    | '/master/locations/'
    | '/master/models/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AssetsAssetIdRoute: typeof AssetsAssetIdRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AssetsIndexRoute: typeof AssetsIndexRoute
  MasterIndexRoute: typeof MasterIndexRoute
  AdminUsersUserIdRoute: typeof AdminUsersUserIdRoute
  MasterBrandsBrandIdRoute: typeof MasterBrandsBrandIdRoute
  MasterCategoriesCategoryIdRoute: typeof MasterCategoriesCategoryIdRoute
  MasterLocationsLocationIdRoute: typeof MasterLocationsLocationIdRoute
  MasterModelsModelIdRoute: typeof MasterModelsModelIdRoute
  AdminSettingsIndexRoute: typeof AdminSettingsIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
  MasterBrandsIndexRoute: typeof MasterBrandsIndexRoute
  MasterCategoriesIndexRoute: typeof MasterCategoriesIndexRoute
  MasterLocationsIndexRoute: typeof MasterLocationsIndexRoute
  MasterModelsIndexRoute: typeof MasterModelsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/master/': {
      id: '/master/'
      path: '/master'
      fullPath: '/master'
      preLoaderRoute: typeof MasterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/assets/': {
      id: '/assets/'
      path: '/assets'
      fullPath: '/assets'
      preLoaderRoute: typeof AssetsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/assets/$assetId': {
      id: '/assets/$assetId'
      path: '/assets/$assetId'
      fullPath: '/assets/$assetId'
      preLoaderRoute: typeof AssetsAssetIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/master/models/': {
      id: '/master/models/'
      path: '/master/models'
      fullPath: '/master/models'
      preLoaderRoute: typeof MasterModelsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/master/locations/': {
      id: '/master/locations/'
      path: '/master/locations'
      fullPath: '/master/locations'
      preLoaderRoute: typeof MasterLocationsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/master/categories/': {
      id: '/master/categories/'
      path: '/master/categories'
      fullPath: '/master/categories'
      preLoaderRoute: typeof MasterCategoriesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/master/brands/': {
      id: '/master/brands/'
      path: '/master/brands'
      fullPath: '/master/brands'
      preLoaderRoute: typeof MasterBrandsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/settings/': {
      id: '/admin/settings/'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/master/models/$modelId': {
      id: '/master/models/$modelId'
      path: '/master/models/$modelId'
      fullPath: '/master/models/$modelId'
      preLoaderRoute: typeof MasterModelsModelIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/master/locations/$locationId': {
      id: '/master/locations/$locationId'
      path: '/master/locations/$locationId'
      fullPath: '/master/locations/$locationId'
      preLoaderRoute: typeof MasterLocationsLocationIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/master/categories/$categoryId': {
      id: '/master/categories/$categoryId'
      path: '/master/categories/$categoryId'
      fullPath: '/master/categories/$categoryId'
      preLoaderRoute: typeof MasterCategoriesCategoryIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/master/brands/$brandId': {
      id: '/master/brands/$brandId'
      path: '/master/brands/$brandId'
      fullPath: '/master/brands/$brandId'
      preLoaderRoute: typeof MasterBrandsBrandIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/users/$userId': {
      id: '/admin/users/$userId'
      path: '/admin/users/$userId'
      fullPath: '/admin/users/$userId'
      preLoaderRoute: typeof AdminUsersUserIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AssetsAssetIdRoute: AssetsAssetIdRoute,
  AdminIndexRoute: AdminIndexRoute,
  AssetsIndexRoute: AssetsIndexRoute,
  MasterIndexRoute: MasterIndexRoute,
  AdminUsersUserIdRoute: AdminUsersUserIdRoute,
  MasterBrandsBrandIdRoute: MasterBrandsBrandIdRoute,
  MasterCategoriesCategoryIdRoute: MasterCategoriesCategoryIdRoute,
  MasterLocationsLocationIdRoute: MasterLocationsLocationIdRoute,
  MasterModelsModelIdRoute: MasterModelsModelIdRoute,
  AdminSettingsIndexRoute: AdminSettingsIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
  MasterBrandsIndexRoute: MasterBrandsIndexRoute,
  MasterCategoriesIndexRoute: MasterCategoriesIndexRoute,
  MasterLocationsIndexRoute: MasterLocationsIndexRoute,
  MasterModelsIndexRoute: MasterModelsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
